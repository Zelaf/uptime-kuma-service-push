name: uptime-kuma-service-push
help: |-
  A bash script generator for Uptime-Kuma's Push Monitor.

  This script generates a script that checks if a service is running and pushes to Uptime-Kuma's Push Monitor. It uses systemctl to check the services and then uses curl to tell Uptime-Kuma if the service is up or down. If the service is down it will also add the last 5 lines of the journalctl logs to the message through tail.
version: 0.6.0
dependencies:
  - curl
  - tail
  - systemctl
  - journalctl
  - cat
  - readlink
  - echo
  - printf
  - mkdir
  - stat

commands:
  - name: generate
    alias: gen
    help: |-
      Generate a push monitor script.

      This will generate the script that pushes an update to Uptime-Kuma.

      If the service is up it sends an OK status and a message saying it's running.
      If the service is down it will send a DOWN status and a message saying the service is down. It will also append the last 5 lines from the log.
    filters:
      - "directory_exists"
    args:
      - name: service
        required: true
        help: |-
          Service name

          Enter the name of the service that you will be checking. It will validate the service using systemctl to check if the service is active.
        validate: service
      - name: url
        required: true
        help: |-
          Push URL - Requires quotations: 'URL'

          It will validate the URL to make sure it contains parts of the API URL as well has the URL prefix.

          Copy and paste the whole URL from Uptime-Kuma's Push Monitor inside of single quotes, otherwise the URL won't be parsed correctly. See examples.
        validate: url
    flags:
      - long: --monitor
        help: |-
          Directly make a symlink to the monitored directory.

          This will make a symlink between the generated script in the script directory and the monitored directory. See 'uptime-kuma-service-push config monitor --help'.
      - long: --no-logs
        help: |-
          Disables the logging overwriting the config files option.
      - long: --add-logs
        help: |-
          Enables the logging overwriting the config files option.
    examples:
      - uptime-kuma-service-push generate docker 'https://example.com/api/push/JSHs372KL8?status=up&msg=OK&ping='
      - uptime-kuma-service-push gen hostapd 'https://example.com/api/push/a02fD177b4?status=up&msg=OK&ping='
  - name: config
    help: |-
      Configuring Uptime-Kuma-Service-Push.

      This command will help you configure some options for Uptime-Kuma-Service-Push.
    commands:
      - name: install
        help: |-
          Install Uptime-Kuma-Service-Push to the system.

          By default, this will install Uptime-Kuma-Service-Push to '/opt/uptime-kuma-service-push/'.
          A symlink will also be created to '/usr/local/bin' so you can run it without specificying the full path.

          You can also specify another directory if you need to install it at another location. See examples.
        args:
          - name: directory
            required: false
            default: /opt
            help: |-
              Directory to install Uptime-Kuma-Service-Push to.

              The directory to install Uptime-Kuma-Service-Push to.
              It will make a new directory called 'uptime-kuma-service-push' in the specified directory.
        examples:
          - uptime-kuma-service-push config install
          - uptime-kuma-service-push config install /home/userdirectory
        flags:
          - long: --no-link
            help: Stops the symlink to '/usr/local/bin' from being made.
          - long: --remove-link
            help: Removes an existing symlink from '/usr/local/bin'.
      - name: systemd-unit
        help: |-
          Makes the Uptime-Kuma-Service-Push systemd unit files.

          This will make the systemd unit files for a service and a timer that runs the monitor script every minute.
        flags:
          - long: --remove
            help: |-
              Remove the systemd unit files
  - name: monitor
    help: |-
      Manage Uptime-Kuma-Service-Push monitoring.
    commands:
      - name: enable
        help: |-
          Add the monitor script to monitoring.
        args:
          - name: service
            required: true
            help: |-
              The generated script that will be added to monitoring.
      - name: disable
        help: |-
          Remove a monitor script from monitoring.
        args:
          - name: service
            required: true
            help: |-
              The generated script that will be removed from monitoring.
      - name: add
        help: |-
          Add the Uptime-Kuma-Service-Push monitor script to the Uptime-Kuma-Service-Push directory.
